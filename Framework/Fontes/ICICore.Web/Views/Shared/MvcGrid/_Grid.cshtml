@using NonFactors.Mvc.Grid;
@using System.ComponentModel.DataAnnotations;
@model IGrid
@{
	Model.EmptyText = string.IsNullOrEmpty(Model.EmptyText) ? "Nenhum registro encontrado" : Model.EmptyText;
	var modelo = ((Object)Model).GetType().GenericTypeArguments[0];
}
<div class="mvc-grid row" data-name="@Model.Name">
	<div class="col-md-12 table-responsive">
		<table class="table table-bordered table-striped mvc-grid-table @Model.CssClasses">
			<thead>
				<tr>
					@foreach (IGridColumn column in Model.Columns)
					{
						String filterableClass = column.IsFilterable == true ? "filterable" : null;
						String sortableClass = column.IsSortable == true ? "sortable" : null;
						var titulo = modelo.GetProperty(column.Title.ToString())?.GetCustomAttributes(typeof(DisplayAttribute), true).FirstOrDefault() as DisplayAttribute;
						<th class="mvc-grid-header @filterableClass @sortableClass @column.CssClasses"
								data-name="@column.Name"
								data-filterable="@column.IsFilterable"
								data-filter-name="@column.FilterName"
								data-filter-multi="@column.IsMultiFilterable"
								data-filter-first-type="@column.Filter?.First?.Type"
								data-filter-first-val="@column.Filter?.First?.Value"
								data-filter-operator="@column.Filter?.Operator"
								data-filter-second-type="@column.Filter?.Second?.Type"
								data-filter-second-val="@column.Filter?.Second?.Value"
								data-sortable="@column.IsSortable"
								data-sort-order="@column.SortOrder"
								data-sort-first="@column.FirstSortOrder">
							<span class="mvc-grid-header-title">@(titulo?.Name ?? column.Title.ToString())</span>
							@if (column.IsSortable == true)
							{
								<span class="mvc-grid-sort @column.SortOrder.ToString().ToLower()"></span>
							}
							@if (column.IsFilterable == true)
							{
								String filterApplied = column.Filter != null && (column.Filter.First != null || column.Filter.Second != null) ? "applied" : "";
								<span class="mvc-grid-filter @filterApplied"></span>
							}
						</th>
					}
				</tr>
			</thead>
			<tbody>
				@if (Model.Rows.Count() > 0)
				{
					foreach (IGridRow<object> row in Model.Rows)
					{
							<tr class="mvc-grid-row @row.CssClasses">
								@foreach (IGridColumn column in Model.Columns)
								{
									var titulo = modelo.GetProperty(column.Title.ToString())?.GetCustomAttributes(typeof(DisplayAttribute), true).FirstOrDefault() as DisplayAttribute;
									var tipo = modelo.GetProperty(column.Title.ToString())?.GetCustomAttributes(typeof(DataTypeAttribute), true).FirstOrDefault() as DataTypeAttribute;
									if(tipo?.CustomDataType.ToString() == DataTypes.ImageUrl || tipo?.DataType == DataType.ImageUrl) {
										<td class="@column.CssClasses"><img src="@column.ValueFor(row)" alt="@(titulo?.Name ?? column.Title.ToString())" class="img-responsive" /></td>
									} else if(tipo?.CustomDataType.ToString() == DataTypes.Url || tipo?.DataType == DataType.Url) {
										<td class="@column.CssClasses"><a href="@column.ValueFor(row)" target="_blank">@(titulo?.Name ?? column.Title.ToString())</a></td>
									} else {
										<td class="@column.CssClasses">@column.ValueFor(row)</td>
									}
								}
							</tr>
					}
				}
				else
				{
					<tr>
						<td class="mvc-grid-table-empty" colspan="@Model.Columns.Count()">
							@Model.EmptyText
						</td>
					</tr>
				}
			</tbody>
		</table>
		@if (Model.Pager != null)
		{
			@Html.Partial(Model.Pager.PartialViewName, Model.Pager)
		}
	</div>
</div>