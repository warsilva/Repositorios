@using Microsoft.VisualStudio.Web.CodeGeneration.EntityFrameworkCore
@using ICICore.Mvc.Web
@using ICICore.Mvc.Web.Atributos
@using DataAnnotations = System.ComponentModel.DataAnnotations
@using System.Reflection;
@using System.ComponentModel.DataAnnotations.Schema
@using static ICICore.Web.Templates.ViewGenerator.ViewGerador
@{
	ModelRef = Model;
	var groups = GroupProperties();
}
@@using static ICICore.Web.Views.ViewExecutor
@@model @Model.ViewDataTypeName
@@{
	var alerta = default(ResultadoOperacao);
	if (TempData.ContainsKey(nameof(ResultadoOperacao)))
	{
		alerta = TempData[nameof(ResultadoOperacao)] as ResultadoOperacao;
	}
}
@@if (alerta != null)
{
	<ici-alerta tipo="alerta.Resultado">@@alerta.Mensagem</ici-alerta>
}
@foreach (var group in groups)
{
	if (GroupWithAnyVisible(group.Value)) {
	@:<div class="panel panel-default">
		@:<div class="panel-heading">@group.Key</div>
		@:<div class="panel-body">
		bool subGrupo = false;
		string idSubGrupo = string.Empty;
		foreach (var propertyInfo in group.Value)
		{
			SubGrupoAttribute subGrupoAtual = GetDisplayGroup(propertyInfo);
			string idSubGrupoAtual = (subGrupoAtual == null) ? string.Empty : subGrupoAtual.Id;
			if (idSubGrupo != idSubGrupoAtual) {
				if (subGrupo) {
					@:</ici-accordion>
				}
				if (idSubGrupoAtual != string.Empty) {
					@:<button type="button" ici-accordion="@idSubGrupoAtual" class="btn btn-bottom btn-secundary">@subGrupoAtual.Nome</button>
					@:<ici-accordion id="@idSubGrupoAtual">
					subGrupo = true;
				} else {
					subGrupo = false;
				}
				idSubGrupo = idSubGrupoAtual;
			}
			DataAnnotations.DataTypeAttribute dataType = GetDataType(propertyInfo);
			if (!IsScaffold(propertyInfo))    //não é possível fazer scaffold
			{
				continue;
			}
			if (!IsScaffold(propertyInfo) || IsAutoGenerated(propertyInfo) || propertyInfo.GetGetMethod().IsVirtual)
			{
				continue;
			}

			if (IsForeignKey(propertyInfo))
			{
				var chave = propertyInfo.GetCustomAttributes(typeof(ForeignKeyAttribute), true).FirstOrDefault() as ForeignKeyAttribute;
				if (dataType?.CustomDataType == DataTypes.ListCheckBox || dataType?.CustomDataType == DataTypes.ListRadio || dataType?.CustomDataType == DataTypes.Radio)
				{
					@:<div ici-form-group="@propertyInfo.Name" class="sem-linha">
						@:<label asp-for="@propertyInfo.Name"></label>
						@:<ici-controle-multiplo asp-for="@propertyInfo.Name" asp-items="ViewBag.@chave.Name" />
						@:<span asp-validation-for="@propertyInfo.Name"></span>
					@:</div>
				}
				else if (dataType?.CustomDataType == DataTypes.SelectMultipleList)
				{
					@:<div class="sem-linha" ici-form-group="@propertyInfo.Name">
						@:<label asp-for="@propertyInfo.Name"></label>
						@:<ici-select-multiplo id="@chave.Name">
							@:<ici-select-original><select asp-for="@chave.Name" class="select-multiplo" asp-items="ViewBag.@chave.Name" ici-controle="@propertyInfo.Name"></select></ici-select-original>
							@:<ici-select-selecionado><select asp-for="@propertyInfo.Name" class="select-multiplo" asp-items="ViewBag.@propertyInfo.Name" ici-controle="@propertyInfo.Name"></select></ici-select-selecionado>
						@:</ici-select-multiplo>
						@:<span asp-validation-for="@propertyInfo.Name"></span>
					@:</div>
				}
				else    //select padrão
				{
					@:<div ici-form-group="@propertyInfo.Name">
						@:<label asp-for="@propertyInfo.Name"></label>
						@:<select asp-for="@propertyInfo.Name" class="select" asp-items="ViewBag.@chave.Name" ici-controle="@propertyInfo.Name"></select>
						@:<span asp-validation-for="@propertyInfo.Name"></span>
					@:</div>
				}
			}
			else if (IsEnum(propertyInfo))
			{
				@:<div ici-form-group="@propertyInfo.Name">
					@:<label asp-for="@propertyInfo.Name"></label>
					@:<select asp-for="@propertyInfo.Name" asp-items="ObterLista(@@Model.@propertyInfo.Name)" ici-controle="@propertyInfo.Name" class="select"></select>
					@:<span asp-validation-for="@propertyInfo.Name"></span>
				@:</div>
			}
			else if (dataType?.CustomDataType == DataTypes.MultilineText || dataType?.DataType == DataAnnotations.DataType.MultilineText || dataType?.CustomDataType == DataTypes.Html || dataType?.DataType == DataAnnotations.DataType.Html)
			{
				@:<div ici-form-group="@propertyInfo.Name">
					@:<label asp-for="@propertyInfo.Name"></label>
					@:<textarea asp-for="@propertyInfo.Name" ici-controle="@propertyInfo.Name"></textarea>
					@:<span asp-validation-for="@propertyInfo.Name"></span>
				@:</div>
			}
			else if (dataType?.CustomDataType == DataTypes.CheckBox)
			{
				@:<div class="sem-linha" ici-form-group="@propertyInfo.Name">
					@:<div class="checkbox">
						@:<label>
							@:<input asp-for="@propertyInfo.Name" ici-controle="@propertyInfo.Name" />
							@:<ici-display-name asp-for="@(propertyInfo.Name)" />
						@:</label>
					@:</div>
				@:</div>
			}
			else if (dataType?.CustomDataType == DataTypes.Slider)
			{
				@:<div class="sem-linha" ici-form-group="@propertyInfo.Name">
					@:<label asp-for="@propertyInfo.Name"></label>
					@:<input asp-for="@propertyInfo.Name" ici-controle="@propertyInfo.Name" />
					@:<output></output>
					@:<span asp-validation-for="@propertyInfo.Name"></span>
				@:</div>
			}
			else if (dataType?.CustomDataType == DataTypes.Switcher)
			{
				@:<div class="sem-linha" ici-form-group="@propertyInfo.Name">
					@:<label class="switch">
						@:<ici-display-name asp-for="@(propertyInfo.Name)" />
						@:<input asp-for="@propertyInfo.Name" ici-controle="@propertyInfo.Name" />
						@:<span class="slider round"></span>
					@:</label>
				@:</div>
			}
			else if (dataType?.CustomDataType == DataTypes.UploadMultiplo)
			{
				@:<div class="sem-linha" ici-form-group="@propertyInfo.Name">
					@:<label asp-for="@propertyInfo.Name"></label>
					@:<ici-upload-multiplo asp-for="@propertyInfo.Name"></ici-upload-multiplo>
					@:<span asp-validation-for="@propertyInfo.Name"></span>
				@:</div>
			}
			else if (dataType?.CustomDataType == DataTypes.Upload || dataType?.DataType == DataAnnotations.DataType.Upload)
			{
				@:<div ici-form-group="@propertyInfo.Name">
					@:<ici-upload asp-for="@propertyInfo.Name" />
					@:<label asp-for="@propertyInfo.Name">
						@:<ici-display-name asp-for="@propertyInfo.Name" />
						@:<span class="icone-clipes-top">Anexar...</span>
					@:</label>
					@:<span asp-validation-for="@propertyInfo.Name"></span>
				@:</div>
			}
			else if (dataType?.CustomDataType == DataTypes.Date || dataType?.DataType == DataAnnotations.DataType.Date || dataType?.CustomDataType == DataTypes.DateTime || dataType?.DataType == DataAnnotations.DataType.DateTime)
			{
				@:<div ici-form-group="@propertyInfo.Name">
					@:<label asp-for="@propertyInfo.Name"></label>
					@:<div class="input-group date">
						@:<span class="input-group-addon icone-calendario"></span>
						@:<input asp-for="@propertyInfo.Name" ici-controle="@propertyInfo.Name" />
					@:</div>
					@:<span asp-validation-for="@propertyInfo.Name"></span>
				@:</div>
			}
			else
			{
				@:<div ici-form-group="@propertyInfo.Name">
					@:<label asp-for="@propertyInfo.Name"></label>
					@:<input asp-for="@propertyInfo.Name" ici-controle="@propertyInfo.Name" />
					@:<span asp-validation-for="@propertyInfo.Name"></span>
				@:</div>
			}
		}
		@if (subGrupo)
		{
			@:</ici-accordion>
		}
	@:</div>
@:</div>
}
}